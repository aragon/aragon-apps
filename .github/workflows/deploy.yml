name: Deploy

on:
  push:
    tags:
      - '*'

jobs:
  checkTag:
    runs-on: ubuntu-latest
    outputs:
      valid: ${{ steps.check.outputs.valid }}
      app: ${{ steps.check.outputs.app }}
      network: ${{ steps.check.outputs.network }}
      version: ${{ steps.check.outputs.version }}
      tag: ${{ steps.check.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: check tag name
        id: check
        run: |
          VERSION=$(python ./.github/scripts/tag_helper.py ${GITHUB_REF##*/} "version")
          APP=$(python ./.github/scripts/tag_helper.py ${GITHUB_REF##*/} "app")
          NETWORK=$(python ./.github/scripts/tag_helper.py ${GITHUB_REF##*/} "network")
          TAG=${GITHUB_REF##*/}

          if [ "$APP" != "" ] && [ "$NETWORK" != "" ] && [ "$VERSION" != "" ]; then
            echo "::set-output name=valid::true"
            echo "::set-output name=app::$APP"
            echo "::set-output name=network::$NETWORK"
            echo "::set-output name=version::$VERSION"
            echo "::set-output name=tag::$TAG"
          else
            echo "::set-output name=valid::false"
          fi
  deploy:
      runs-on: ubuntu-latest
      needs: [checkTag]
      if: needs.checkTag.outputs.valid == 'true'
      environment: ${{ needs.checkTag.outputs.network }} 
      steps:
        - uses: actions/checkout@v2
        - name: Install node
          uses: actions/setup-node@v1
          with:
            node-version: 14
        - name: setup ipfs
          uses: ibnesayeed/setup-ipfs@master
          with:
            run_daemon: true
        - name: Configure aragon cli 
          run: |
            mkdir -p ~/.aragon
            echo ${{ secrets.ARAGON_CLI_JSON }} >> ~/.aragon/${{ needs.checkTag.outputs.network }}_key.json
        - name: Install npm packages
          run: yarn
        - name: build, publish and package
          id: build
          run: | 
            cd apps/${{ needs.checkTag.outputs.app }}
            yarn --ignore-engines --dev
            if [[ -d app ]]; then
              yarn build
            fi
        - name: publish
          id: publish
          env:
            PUBLISH_LOG: ./publish-deploy.log
          run:  |
            cd apps/${{ needs.checkTag.outputs.app }}
            npx hardhat publish ${{ needs.checkTag.outputs.version }} --skip-validation --skip-app-build --network ${{ needs.checkTag.outputs.network }} | tee $PUBLISH_LOG
            echo "::set-output name=cid::$(cat $PUBLISH_LOG | sed -nE 's/^.*ContentURI: *([^ ]*) *.*$/\1/p')"
            echo "::set-output name=contract::$(cat $PUBLISH_LOG | sed -nE 's/^.*Contract address: *([^ ]*) *.*$/\1/p')"
            echo "::set-output name=txhash::$(cat $PUBLISH_LOG | sed -nE 's/^.*Tx hash: *([^ ]*) *.*$/\1/p')"
        - name: package app
          id: packaging
          env:
            CID: ${{ steps.publish.outputs.cid }}
            PACKAGE_NAME: ${{ needs.checkTag.outputs.app }}.aragonpm.eth@${{ needs.checkTag.outputs.version }}
          run: |
            cd $(mktemp -d)
            ipfs get $CID
            tar -czvf $PACKAGE_NAME.tar.gz $CID/
            echo "::set-output name=tar::$(echo $PWD/$PACKAGE_NAME.tar.gz)"
            echo "::set-output name=tempdir::$(echo $PWD)"
        - name: Install ipfs-cluster-ctl
          run: |
            wget https://dist.ipfs.io/ipfs-cluster-ctl/v0.14.1/ipfs-cluster-ctl_v0.14.1_linux-amd64.tar.gz
            tar xvfz ipfs-cluster-ctl_v0.14.1_linux-amd64.tar.gz
        - name: pin on cluster
          working-directory: ${{ steps.packaging.outputs.tempdir }}
          env: 
            CID: ${{ steps.publish.outputs.cid }}
            PATH: "$PATH:$GITHUB_WORKSPACE/ipfs-cluster-ctl"
            IPFS_CLUSTER_BASIC_AUTH: ${{ secrets.IPFS_CLUSTER_BASIC_AUTH }}
            IPFS_CLUSTER_HOST: ${{ secrets.IPFS_CLUSTER_HOST }}
          run: ipfs-cluster-ctl --basic-auth $IPFS_CLUSTER_BASIC_AUTH --host "$IPFS_CLUSTER_HOST" add -r $CID
        - uses: "marvinpinto/action-automatic-releases@latest"
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: "${{ needs.checkTag.outputs.tag }}"
            prerelease: false
            title: "${{ needs.checkTag.outputs.tag }}"
            files: |
              ${{ steps.packaging.outputs.tar }}
        - name: Checkout Deployments
          uses: actions/checkout@v2
          with:
            repository: 'aragon/deployments'
            ref: 'master'
            token: ${{ secrets.ARABOT_PAT }}
            path: deployments
        - uses: actions/setup-python@v2
          with:
            python-version: '3.x'
            architecture: 'x64'
        - name: install pyyaml
          run: |
            pip install --user pyyaml
        - name: extend deployments file
          env:
            APP: ${{ needs.checkTag.outputs.app }}
            VERSION: ${{ needs.checkTag.outputs.version }}
            NETWORK: ${{ needs.checkTag.outputs.network }}
            CID: ${{ steps.publish.outputs.cid }}
            CONTRACT: ${{ steps.publish.outputs.contract }}
            TXHASH: ${{ steps.publish.outputs.txhash }}
          run:  python .github/scripts/update_deploymentfile.py "deployments/" $APP $NETWORK $VERSION $CID $CONTRACT $GITHUB_SHA $TXHASH
        - name: move files in place
          run: |
            mkdir -p deployments/environments/${{ needs.checkTag.outputs.network }}/${{ needs.checkTag.outputs.app }}.aragonpm.eth/
            cp  ${{ steps.packaging.outputs.tar }} deployments/environments/${{ needs.checkTag.outputs.network }}/${{ needs.checkTag.outputs.app }}.aragonpm.eth/
        - name: Create Pull Request
          uses: peter-evans/create-pull-request@v3
          id: cpr
          with: 
            token: ${{ secrets.ARABOT_PAT }}
            path: deployments
            commit-message: "Updates ${{ needs.checkTag.outputs.app }} on ${{ needs.checkTag.outputs.network }} to ${{ needs.checkTag.outputs.version }}"
            branch: ${{ needs.checkTag.outputs.tag }}
            delete-branch: true
            base: master
            title: "Updates ${{ needs.checkTag.outputs.app }} on ${{ needs.checkTag.outputs.network }} to ${{ needs.checkTag.outputs.version }}"
            body: "Automatic update from aragon/aragon-apps"
        - name: merge pull
          uses: actions/github-script@v5
          env:
            PULL_NUMBER: ${{ steps.cpr.outputs.pull-request-number }}
          with:
            github-token: ${{ secrets.ARABOT_PAT }}
            script: |
              github.rest.pulls.merge({
                 owner: 'aragon',
                 repo: 'deployments',
                 pull_number: process.env.PULL_NUMBER
              })
